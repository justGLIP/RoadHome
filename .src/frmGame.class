' Gambas class file


Public DiceImg As String[] = ["dieRed1.png", "dieRed2.png", "dieRed3.png", "dieRed4.png", "dieRed5.png", "dieRed6.png"]
Public ChipImg As String[] = ["chipGreenWhite_border.png", "chipBlueWhite_border.png", "chipRedWhite_border.png", "chipBlackWhite_border.png"]
Public moved As Boolean = True 'подвинул фишку
Public toUp As Byte
Public toRight As Byte
Public toDown As Byte
Public toLeft As Byte
Public xX As Byte = 5
Public yY As Byte = 1
Public zZ As Byte = 0
Public Player As Byte = 10
Public playersFigs As Byte[] = [0, 0, 0, 0] 'Количество фишек на доске у игрока [X]
Public playersBorders As Byte[] = [4, 4, 4, 4] 'Количество бордюров на стороне игрока[X]
Public toMove As Boolean = False 'кинул кубик, но не двинул фишку, хотя есть куда = true
Public posMove As Boolean = False 'есть ли возможные ходы
Public board[8, 8] As Byte ' массив доски в формате xy, где x - номер игрока y - направление движения
                            'y: 1 - вверх, 2 - вправо, 3 - вниз, 4 - влево, 5 - по диагонали в дом
                            'при значении клетки 77 - движение прямо, 78 - движение со сменой направления, 88 - бордюр
Public FigXold As Byte
Public FigYold As Byte 'координаты фишки до начала движения
Public Dice As Byte   'число выпавшее на кубике

Public Sub Form_Show()
Dim j As Byte
'В зависимости от количества игроков скрываем в статистике фишки
   Select Case frmStart.Players
     Case 2
       pctBox3.Visible = True
       pctBox4.Visible = True
     Case 3
       pctBox4.Visible = True
   End Select

'Изменяем размер формы под поле 8х8
   With btnDice
     .x = 700
     .y = 540
     .Width = 80
     .height = 80
     .Picture = Picture.Load("Resources/Images/dieRed1.png")
   End With
   
   With Me
     .Width = 840
     .height = 640
   End With

   With GridView1
     .Columns.Count = 8
     .Rows.Count = 8
     .Rows.Height = 80
     .Columns.Width = 80
     .Width = 640
     .Height = 640
   End With

''рисуем шахматную доску и расставляем бордюры
   recolor
   For j = 0 To 7
     GridView1[j, j].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
     GridView1[j, j].Alignment = 3
     board[j, j] = 88
     GridView1[7 - j, j].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
     GridView1[7 - j, j].Alignment = 3
     board[7 - j, j] = 88
   Next

'' Запускаем фоновую музыку
   Music.Load("Resources/Audio/Kai_Engel_-_09_-_Homeroad.mp3")
   Music.Play(-1)

End


Public Sub Form_Close()

   frmStart.Close
   frmTemp.Close
End


Public Sub GridView1_Click()

frmTemp.redraw 'Перерисовываем временную (отладочную) форму

If moved = True Then 'если уже двинул фишку
   Return 'Не реагировать на клики по полю
  Else 'а иначе
  
   ''СМОТРИМ, КУДА КЛИКНУЛИ
   Select Case board[GridView1.Row, GridView1.Column]
  
     Case 77 'если клик на поле, подсвеченное для движения прямо
       board[xX, yY] = zZ
       GridView1[FigXold, FigYold].Clear 'очищаем клетку где была фишка
       GridView1[GridView1.Row, GridView1.Column].Picture = Picture.Load("Resources/Images/" & ChipImg[(Player / 10) - 1]) 'рисуем ее на новом месте
       board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold]

       Select Case GridView1.Row 'изменение направления движения фишки
         Case 0 
           Select Case GridView1.Column
             Case 0 'меняем с вверх на вправо
               'If Player = 20 Then
                ' board[GridView1.Row, GridView1.Column] = 25 'у второго игрока направление меняется на движение в дом
               'Else
                 board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold] + 1
               'End If
               playersBorders[1] -= 1
               moveCorrection
             Case 7 'меняем с вправо на вниз
               'If Player = 30 Then
                ' board[GridView1.Row, GridView1.Column] = 35 'у третьего игрока направление меняется на движение в дом
               'Else
                 board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold] + 1
               'End If
               playersBorders[2] -= 1
               moveCorrection
           End Select
         Case 7
           Select Case GridView1.Column
             Case 0 'меняем с влево на вверх
               'If Player = 10 Then
                ' board[GridView1.Row, GridView1.Column] = 15 'у первого игрока направление меняется на движение в дом
               'Else
                 board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold] + 1
               'End If
               playersBorders[0] -= 1
               moveCorrection
             Case 7 'меняем с вниз на влево
               'If Player = 40 Then
                ' board[GridView1.Row, GridView1.Column] = 45 'у четвертого игрока направление меняется на движение в дом
               'Else
                 board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold] + 1
               'End If
               playersBorders[3] -= 1
               moveCorrection
           End Select
       End Select
       
       xX = 5
       yY = 1
       zZ = 0
       moved = True
       If Dice <> 6 Then toMove = False
      
       If FigXold = 7 And FigYold = 0 Then 'заполняем первые границы (бордеры)
         board[7, 0] = 88 'запоминаем, что на угловой клетке теперь бордюр
         Select Case playersBorders[0] 
           Case 3
             GridView1[7, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[4, 3].Clear
             board[4, 3] = 0
           Case 2
             GridView1[7, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[5, 2].Clear
             board[5, 2] = 0
           Case 1
             If Not (board[FigXold, FigYold] = 15) Then
               GridView1[7, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
               GridView1[6, 1].Clear
               board[6, 1] = 0
             End If
          
           Case 0
             board[7, 0] = 0
         End Select
       Endif
      
       If FigXold = 0 And FigYold = 0 Then 'заполняем вторые границы (бордеры)
         board[0, 0] = 88 'запоминаем, что на угловой клетке теперь бордюр
         Select Case playersBorders[1] 
           Case 3
             GridView1[0, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[3, 3].Clear
             board[3, 3] = 0
           Case 2
             GridView1[0, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[2, 2].Clear
             board[2, 2] = 0
           Case 1
             If Not (board[FigXold, FigYold] = 25) Then
               GridView1[0, 0].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
               GridView1[1, 1].Clear
               board[1, 1] = 0
             End If
           Case 0
             board[0, 0] = 0
         End Select  
       Endif
      
       If FigXold = 0 And FigYold = 7 Then 'заполняем третьи границы (бордеры)
         board[0, 7] = 88 'запоминаем, что на угловой клетке теперь бордюр
         Select Case playersBorders[2] 
           Case 3
             GridView1[0, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[3, 4].Clear
             board[3, 4] = 0
           Case 2
             GridView1[0, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[2, 5].Clear
             board[2, 5] = 0
           Case 1
             If Not (board[FigXold, FigYold] = 35) Then
               GridView1[0, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
               GridView1[1, 6].Clear
               board[1, 6] = 0
             End If
           Case 0
             board[0, 7] = 0
         End Select  
       Endif
    
       If FigXold = 7 And FigYold = 7 Then 'заполняем четвертые границы (бордеры)
         board[7, 7] = 88 'запоминаем, что на угловой клетке теперь бордюр
         Select Case playersBorders[3] 'publicClass.pFourBorders
           Case 3
             GridView1[7, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[4, 4].Clear
             board[4, 4] = 0
           Case 2
             GridView1[7, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
             GridView1[5, 5].Clear
             board[5, 5] = 0
           Case 1
             If Not (board[FigXold, FigYold] = 45) Then
               GridView1[7, 7].Picture = Picture.Load("Resources/Images/pieceWhite_single09.png")
               GridView1[6, 6].Clear
               board[6, 6] = 0
             End If
           Case 0
             board[7, 7] = 0
         End Select  
       Endif
    
     'Подвинул фишку прямо - дальше:
     board[FigXold, FigYold] = 0 'обнуляем старое поле фишки после хода прямо
     recolor 'убираем желтый цвет поля
     If Dice <> 6 Then EndTurn 'Заканчиваем ход
     
     Case 78 'если клик для движения с поворотом
       board[xX, yY] = zZ
       GridView1[FigXold, FigYold].Clear 'очищаем клетку где была фишка
       GridView1[GridView1.Row, GridView1.Column].Picture = Picture.Load("Resources/Images/" & ChipImg[(Player / 10) - 1]) 'рисуем ее на новом месте
       board[GridView1.Row, GridView1.Column] = board[FigXold, FigYold] + 1 'изменяем направление движения фишки
       moveCorrection
       
       board[FigXold, FigYold] = 0
       moved = True
       If Dice <> 6 Then toMove = False
       xX = 5
       yY = 1
       zZ = 0
       recolor 'убираем желтый цвет поля
       If Dice <> 6 Then EndTurn

     Case Player + 1 'клик на фишку активного игрока, движущегося вверх 
       possibleMove(GridView1.Row, GridView1.Column, True)
     
     Case Player + 2
       possibleMove(GridView1.Row, GridView1.Column, True)
     
     Case Player + 3 
       possibleMove(GridView1.Row, GridView1.Column, True)
     
     Case Player + 4 
       possibleMove(GridView1.Row, GridView1.Column, True)
     
     Case Player + 5 
       possibleMove(GridView1.Row, GridView1.Column, True)
     Case Else
       recolor
       board[xX, yY] = zZ
   End Select
  
  End If

End

Public Sub DiceThrow() 'бросаем кубик

  Randomize
  Dice = Int(Rnd(1, 7))

End

Public Sub btnDice_Click()

  If toMove = True Then 
   Return 'это чтобы не давать кидать кубик несколько раз
  Else
   moved = False
   toMove = True  
   Dim i, j As Byte
   Dim throw As Sound
   DiceThrow 'бросаем кубик (выбираем случайное число от 1 до 6)
   'Dice = txtTest.Text
   recolor 'перекрашиваем поле
  
   'звук броска
   If chkSound.Value Then
     throw = Sound.Load("Resources/Audio/diceThrow3.ogg")
     throw.Play
   Endif
  
   'анимация броска
   For i = 0 To 10
     j = Int(Rnd(1, 7)) - 1
     btnDice.Picture = Picture.Load("Resources/Images/" & DiceImg[j])
     Wait 0.1
   Next
   btnDice.Picture = Picture.Load("Resources/Images/" & DiceImg[Dice - 1])
  
   'If Not (Dice = 6) And playersFigs[(Player / 10) - 1] = 0 Then ' если фишек на поле нет и не выпала шестерка, то конец хода
   '  EndTurn
   'Endif
   
   ''ЕСЛИ ВЫПАЛА ШЕСТЕРКА
   Dim aa, bb As Byte
   If Dice = 6 Then
     toMove = False
     Select Case Player 'задаем стартовую точку в зависимости от активного игрока
       Case 10 'первый игрок
         aa = 7
         bb = 0
       Case 20
         aa = 0
         bb = 0
       Case 30
         aa = 0
         bb = 7
       Case 40
         aa = 7
         bb = 7
     End Select
    
     Dim pl As Byte
     pl = board[aa, bb] - Player
    
     If playersFigs[(Player / 10) - 1] < 4 And (pl > 10 Or pl < 0) Then 'если есть фигуры в запасе и поле дома не занято
       Message.Title = "Как поступите?"
       If (Message.Question("Выставить новую фишку?", "Да", "Нет")) = 1 Then
         'выставить фишку
         moved = True
         GridView1[aa, bb].Picture = Picture.Load("Resources/Images/" & ChipImg[(Player / 10) - 1])
         playersBorders[(Player / 10) - 1] -= 1  'количество бордюров на этой стороне уменьшилось
         playersFigs[(Player / 10) - 1] += 1 'количество фигур игрока на поле увеличилось
         board[aa, bb] = Player + (Player / 10) 'на клетку выставлена фигура игрока X с направлением хода по первой линии
        
         ''ИЗМЕНЕНИЕ КОЛИЧЕСТВА ФИШЕК В РАМКЕ СТАТУСА
         Select Case Player

           Case 10 'Для первого игрока
             Select Case playersFigs[0] 
               Case 0 'на поле не осталось фигур первого игрока
                 pctOne4.Visible = True
                 pctOne3.Visible = True
                 pctOne2.Visible = True
                 pctOne1.Visible = True  
               Case 1 'на поле одна фигура первого игрока
                 pctOne4.Visible = False
                 pctOne3.Visible = True
                 pctOne2.Visible = True
                 pctOne1.Visible = True
               Case 2
                 pctOne4.Visible = False
                 pctOne3.Visible = False
                 pctOne2.Visible = True
                 pctOne1.Visible = True
               Case 3
                 pctOne4.Visible = False
                 pctOne3.Visible = False
                 pctOne2.Visible = False
                 pctOne1.Visible = True
               Case 4
                 pctOne4.Visible = False
                 pctOne3.Visible = False
                 pctOne2.Visible = False
                 pctOne1.Visible = False  
             End Select
          
           Case 20 'Для второго игрока
             Select Case playersFigs[1] 
               Case 0 'на поле не осталось фигур
                 pctTwo4.Visible = True
                 pctTwo3.Visible = True
                 pctTwo2.Visible = True
                 pctTwo1.Visible = True
               Case 1 'на поле одна фигура
                 pctTwo4.Visible = False
                 pctTwo3.Visible = True
                 pctTwo2.Visible = True
                 pctTwo1.Visible = True
               Case 2
                 pctTwo4.Visible = False
                 pctTwo3.Visible = False
                 pctTwo2.Visible = True
                 pctTwo1.Visible = True
               Case 3
                 pctTwo4.Visible = False
                 pctTwo3.Visible = False
                 pctTwo2.Visible = False
                 pctTwo1.Visible = True
               Case 4
                 pctTwo4.Visible = False
                 pctTwo3.Visible = False
                 pctTwo2.Visible = False
                 pctTwo1.Visible = False  
             End Select
          
           Case 30 'Для третьего игрока
             Select Case playersFigs[2] 
               Case 0 'на поле не осталось фигур
                 pctThree4.Visible = True
                 pctThree3.Visible = True
                 pctThree2.Visible = True
                 pctThree1.Visible = True  
               Case 1 'на поле одна фигура
                 pctThree4.Visible = False
                 pctThree3.Visible = True
                 pctThree2.Visible = True
                 pctThree1.Visible = True
               Case 2
                 pctThree4.Visible = False
                 pctThree3.Visible = False
                 pctThree2.Visible = True
                 pctThree1.Visible = True
               Case 3
                 pctThree4.Visible = False
                 pctThree3.Visible = False
                 pctThree2.Visible = False
                 pctThree1.Visible = True
               Case 4
                 pctThree4.Visible = False
                 pctThree3.Visible = False
                 pctThree2.Visible = False
                 pctThree1.Visible = False  
             End Select
            
           Case 40 'Для четвертого игрока
             Select Case playersFigs[3] 
               Case 0 'на поле не осталось фигур
                 pctFour4.Visible = True
                 pctFour3.Visible = True
                 pctFour2.Visible = True
                 pctFour1.Visible = True  
               Case 1 'на поле одна фигура
                 pctFour4.Visible = False
                 pctFour3.Visible = True
                 pctFour2.Visible = True
                 pctFour1.Visible = True
               Case 2
                 pctFour4.Visible = False
                 pctFour3.Visible = False
                 pctFour2.Visible = True
                 pctFour1.Visible = True
               Case 3
                 pctFour4.Visible = False
                 pctFour3.Visible = False
                 pctFour2.Visible = False
                 pctFour1.Visible = True
               Case 4
                 pctFour4.Visible = False
                 pctFour3.Visible = False
                 pctFour2.Visible = False
                 pctFour1.Visible = False  
           End Select    
         End Select
       Endif 'это про выставить ли новую фишку
     Endif 'это про если есть фигуры в запасе и поле дома не занято
   End If
   
   'Если выпала не 6 или не стал выставлять фишку
   'проверяем, есть ли вообще возможные ходы
   If Dice <> 6 Then CheckMoves
  End If 
  
  End

Public Sub recolor() 'перекраска поля

  Dim i, j As Byte
  For i = 0 To 7
   For j = 0 To 6 Step 2
     If i Mod 2 = 0 Then
       GridView1[i, j].Background = 123
       GridView1[i, j + 1].Background = 321
     Else
       GridView1[i, j].Background = 321
       GridView1[i, j + 1].Background = 123
     Endif
   Next
  Next

End


Public Sub chkMusic_Click()

  If chkMusic.Value Then Music.play(-1) Else Music.Stop

End

Public Sub possibleMove(posX As Integer, posY As Integer, light As Boolean)

  Dim movesLeft As Byte
  
  ''ПОДСВЕЧИВАЕМ ВОЗМОЖНЫЙ ХОД
  Dim s As Byte
  posMove = False
  s = board[posX, posY] - Player
  If s < 10 And s > 0 'если там где кликнули - фишка активного игрока
   recolor
   board[xX, yY] = zZ 'Возвращаем значение с предыдущего клика в норму

   Select Case board[posX, posY] - Player 'определяем куда эта фишка движется
     
     Case 1 'если вверх
       If posX - Dice >= 0 Then 'если ход умещается по вертикали
         xX = posX - Dice 'Запоминаем изменяемые координаты
         yY = 0
         zZ = board[xX, yY] 'Запоминаем изменяемое значение
        
         ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
         For s = posX - 1 To posX - (Dice - 1) Step -1
           If board[s, 0] <> 0 Then Return 'по дороге занято - хода нет
         Next
         If board[posX - Dice, 0] - Player > 0 And board[posX - Dice, 0] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
         
         If light Then
           GridView1[posX - Dice, 0].Background = Color.Yellow
           board[posX - Dice, 0] = 77
         Else
           posMove = True  
         Endif

       Else 'если нужно повернуть
         If playersBorders[1] = 0 Then
           toUp = posX
           toRight = Dice - posX
           xX = 0 'Запоминаем изменяемые координаты
           yY = toRight
           zZ = board[xX, yY] 'Запоминаем изменяемое значение
           
           ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
           For s = posX - 1 To 0 Step -1
             If board[s, 0] <> 0 Then Return 'по дороге занято - хода нет
           Next
           For s = 1 To toRight - 1
             If board[0, s] <> 0 Then Return 'по дороге занято - хода нет
           Next
           If board[0, toRight] - Player > 0 And board[0, toRight] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
           
           If light Then  
             GridView1[0, toRight].Background = Color.Yellow
             board[0, toRight] = 78
           Else 
             posMove = True
           Endif
         Endif
       End If

     Case 2 'если вправо
       If posY + Dice <= 7 Then 'если ход умещается по горизонтали
         xX = 0 'Запоминаем изменяемые координаты
         yY = posY + Dice
         zZ = board[xX, yY] 'Запоминаем изменяемое значение
         
         ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
         For s = posY + 1 To yY - 1
           If board[0, s] <> 0 Then Return 'по дороге занято - хода нет
         Next
         If board[0, yY] - Player > 0 And board[0, yY] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
         
         If light Then  
           GridView1[0, posY + Dice].Background = Color.Yellow
           board[0, posY + Dice] = 77
         Else
           posMove = True
         Endif
       Else 'если нужно повернуть
         If playersBorders[2] = 0 Then
           toRight = 7 - posY
           toDown = Dice - toRight
           xX = toDown 'Запоминаем изменяемые координаты
           yY = 7
           zZ = board[xX, yY] 'Запоминаем изменяемое значение
           
           ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
           For s = posY + 1 To 7
             If board[0, s] <> 0 Then Return 'по дороге занято - хода нет
           Next
           For s = 1 To toDown - 1
             If board[s, 7] <> 0 Then Return 'по дороге занято - хода нет
           Next
           If board[toDown, 7] - Player > 0 And board[toDown, 7] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
           
           If light Then
             GridView1[toDown, 7].Background = Color.Yellow
             board[toDown, 7] = 78
           Else
             posMove = True
           Endif
         End If
       End If
    
     Case 3 'если вниз
       If posX + Dice <= 7 Then 'если ход умещается по верикали
         xX = posX + Dice 'Запоминаем изменяемые координаты
         yY = 7
         zZ = board[xX, yY] 'Запоминаем изменяемое значение
         
         ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
         For s = posX + 1 To xX - 1
           If board[s, 7] <> 0 Then Return 'по дороге занято - хода нет
         Next
         If board[xX, 7] - Player > 0 And board[xX, 7] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
         
         If light Then    
           GridView1[posX + Dice, 7].Background = Color.Yellow
           board[posX + Dice, 7] = 77
         Else
           posMove = True
         Endif
       Else 'если нужно повернуть
         If playersBorders[3] = 0 Then
           toDown = 7 - posX
           toLeft = Dice - toDown
           xX = 7 'Запоминаем изменяемые координаты
           yY = 7 - toLeft
           zZ = board[xX, yY] 'Запоминаем изменяемое значение
           
           ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
           For s = posX + 1 To 7
             If board[s, 7] <> 0 Then Return 'по дороге занято - хода нет
           Next
           For s = 6 To yY - 1 Step -1
             If board[7, s] <> 0 Then Return 'по дороге занято - хода нет
           Next
           If board[7, yY] - Player > 0 And board[7, yY] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
           
           If light Then
             GridView1[7, 7 - toLeft].Background = Color.Yellow
             board[7, 7 - toLeft] = 78
           Else
             posMove = True
           Endif
         End If
       Endif
    
     Case 4 'если влево
       If posY - Dice >= 0 Then 'если ход умещается по горизонтали
         xX = 7 'Запоминаем изменяемые координаты
         yY = posY - Dice
         zZ = board[xX, yY] 'Запоминаем изменяемое значение
         
         ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
         For s = posY - 1 To yY + 1 Step -1
           If board[7, s] <> 0 Then Return 'по дороге занято - хода нет
         Next
         If board[7, yY] - Player > 0 And board[7, yY] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
         
         If light Then  
           GridView1[7, posY - Dice].Background = Color.Yellow
           board[7, posY - Dice] = 77
         Else
           posMove = True
         Endif
         
       Else 'если нужно повернуть
         If playersBorders[0] = 0 And Dice - posY < 4 Then
           toLeft = posY
           toUp = Dice - toLeft
           xX = 7 - toUp 'Запоминаем изменяемые координаты
           yY = toUp
           zZ = board[xX, yY] 'Запоминаем изменяемое значение
           
           ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
           For s = posY - 1 To 0
             If board[7, s] <> 0 Then Return 'по дороге занято - хода нет
           Next
           If Player = 10 Then ''Если игрок №1 - значит он поворачивает в дом
             movesLeft = Dice - posY
             If movesLeft > 4 Then Return
             For s = 6 To xX + 1 Step -1
               For movesLeft = 1 To yY - 1
                 If board[s, movesLeft] <> 0 Then Return 'по дороге занято - хода нет
               Next
             Next
             If zZ - Player > 0 And zZ - Player < 10 Then Return 'в конце пути своя фишка - хода нет
             
             If light Then 
               GridView1[7 - toUp, toUp].Background = Color.Yellow
               board[7 - toUp, toUp] = 78
             Else
               posMove = True
             Endif
             
           Else ''Не 1й игрок - значит поворачивает вверх
             For s = 6 To xX + 1 Step -1
               If board[s, 0] <> 0 Then Return 'по дороге занято - хода нет
             Next
             If board[xX, 0] - Player > 0 And board[xX, 0] - Player < 10 Then Return 'в конце пути своя фишка - хода нет
             
             If light Then
               GridView1[xX, 0].Background = Color.Yellow
               board[xX, 0] = 78
             Else
               posMove = True
             Endif
           End If
           
           'If light Then ''ПОДСВЕЧИВАЕМ ПРАВИЛЬНО ТОЛЬКО ДЛЯ ПЕРВОГО ИГРОКА
           '  GridView1[7 - toUp, toUp].Background = Color.Yellow
           '  board[7 - toUp, toUp] = 78
           'Else
           '  posMove = True
           'Endif
         End If  
       End If
    
     Case 5 '' если по диагонали в дом ТОЛЬКО ДЛЯ ПЕРВОГО ИГРОКА
       movesLeft = 3 - posY
       If Dice > movesLeft Then
         Return
       Else 
         'If board[posX - 1, posY + 1] = 0 Or (board[posX - 1, posY + 1] = 88 And Dice = 1) Then
           xX = posX - Dice 'Запоминаем изменяемые координаты
           yY = posY + Dice
           zZ = board[xX, yY] 'Запоминаем изменяемое значение
           
           ' ПРОВЕРЯЕМ СВОБОДЕН ЛИ ПУТЬ
           For s = posX - 1 To xX + 1 Step -1
             For movesLeft = posY + 1 To yY - 1
               If board[s, movesLeft] <> 0 Then Return 'по дороге занято - хода нет
             Next
           Next
           If zZ - Player > 0 And zZ - Player < 10 Then Return 'в конце пути своя фишка - хода нет
           
           If light Then
             GridView1[posX - Dice, posY + Dice].Background = Color.Yellow
             board[posX - Dice, posY + Dice] = 77
           Else
             posMove = True
           Endif
         'Endif
       Endif
  
   End Select

   If light Then
     FigXold = posX 'запоминаем координаты фишки до начала движения
     FigYold = posY 
   End If
  
  Endif

End


Public Sub EndTurn()
  Player += 10
  Select Case frmStart.Players
   Case 2
     Select Case Player
       Case 20
         btnTest.Background = 255
         btnTest.Text = "2"
       Case 30
         Player = 10
         btnTest.Background = 65280
         btnTest.Text = "1"
     End Select
   Case 3
     Select Case Player
       Case 20
         btnTest.Background = 255
         btnTest.Text = "2"
       Case 30
         btnTest.Background = 16711680
         btnTest.Text = "3"
       Case 40
         Player = 10
         btnTest.Background = 65280
         btnTest.Text = "1"
     End Select
   Case 4
     Select Case Player
       Case 20
         btnTest.Background = 255
         btnTest.Text = "2"
       Case 30
         btnTest.Background = 16711680
         btnTest.Text = "3"
       Case 40
         btnTest.Background = 0
         btnTest.Text = "4"
       Case 50
         Player = 10
         btnTest.Background = 65280
         btnTest.Text = "1"
     End Select
 End Select

  Message("Ход игрока " & Str(Player / 10), "OK")
  moved = False
  toMove = False
  posMove = False

End

Public Sub CheckMoves()

  Dim a As Byte = 0
  Dim i, j, b As Byte
  Dim x As Byte[] = [3, 3, 3, 3]
  Dim y As Byte[] = [1, 1, 1, 1]

  'Находим фишки игрока на поле
    For i = 0 To 7
      For j = 0 To 7
        b = board[i, j] - Player
        If 0 < b And b < 10 Then
          x[a] = i
          y[a] = j
          a += 1
        Endif
      Next    
    Next

'Проверяем возможные ходы
i = 0
While i < 4 And posMove = False
    possibleMove(x[i], y[i], False)
    i += 1
Wend
If posMove = False Then EndTurn


End

Public Sub btnTest_Click()


  EndTurn

End

Public Sub moveCorrection()
  
  Select Case board[GridView1.Row, GridView1.Column] 'исправления для изменений
         Case 22
           board[GridView1.Row, GridView1.Column] = 25
         Case 25
           board[GridView1.Row, GridView1.Column] = 21
         Case 33
           board[GridView1.Row, GridView1.Column] = 35
         Case 35
           board[GridView1.Row, GridView1.Column] = 31
         Case 44
           board[GridView1.Row, GridView1.Column] = 45
         Case 45
           board[GridView1.Row, GridView1.Column] = 41
       End Select
  
End
